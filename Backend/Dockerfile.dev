# Development Dockerfile for Python 3.13
FROM python:3.13-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONHASHSEED=random \
    UV_CACHE_DIR=/tmp/uv-cache

# Install system dependencies including Chrome and browser dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        build-essential \
        libpq-dev \
        curl \
        netcat-openbsd \
        git \
        wget \
        gnupg \
        unzip \
        # Chrome dependencies
        libnss3 \
        libatk-bridge2.0-0 \
        libdrm2 \
        libxkbcommon0 \
        libxcomposite1 \
        libxdamage1 \
        libxrandr2 \
        libgbm1 \
        libxss1 \
        libasound2 \
        libatspi2.0-0 \
        libgtk-3-0 \
    && rm -rf /var/lib/apt/lists/*

# Install Google Chrome
RUN wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list \
    && apt-get update \
    && apt-get install -y google-chrome-stable \
    && rm -rf /var/lib/apt/lists/*

# Install uv globally
RUN pip install uv

# Set the working directory for the application
WORKDIR /app

# Copy dependency files first for better caching
COPY pyproject.toml uv.lock ./

# Install dependencies in a cached layer
RUN uv sync --frozen --no-dev

# Create directories with proper permissions that are not part of the source code mount
RUN mkdir -p /app/staticfiles /app/media /app/logs \
    && chmod 755 /app/staticfiles /app/media /app/logs

# Copy the rest of the application code
COPY . .

# Expose port
EXPOSE 8000

# Default command (will be overridden by docker-compose)
CMD ["uv", "run", "manage.py", "runserver", "0.0.0.0:8000"]
