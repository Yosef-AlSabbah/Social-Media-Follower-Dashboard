services:
  db:
    image: postgres:17-alpine
    container_name: backend_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_NAME:-follower_dashboard}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    networks:
      - backend-network

  redis:
    image: redis:8.0-alpine
    container_name: backend_redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-rawad_redis_password_2025}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-rawad_redis_password_2025}
    networks:
      - backend-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: backend_app
    command: sh -c "
                    uv run manage.py migrate --noinput &&
                    uv run manage.py populate_fetch_scripts &&
                    uv run manage.py runserver 0.0.0.0:8000
                   "
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - DEBUG=${DEBUG:-True}
      - POSTGRES_NAME=${POSTGRES_NAME:-follower_dashboard}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD:-rawad_redis_password_2025}
    depends_on:
      - db
      - redis
    networks:
      - backend-network

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: backend_celery_worker
    command: sh -c "
                    mkdir -p /app/logs &&
                    chmod 755 /app/logs &&
                    uv run celery -A core worker --loglevel=info
                   "
    volumes:
      - .:/app
    environment:
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - DEBUG=${DEBUG:-True}
      - POSTGRES_NAME=${POSTGRES_NAME:-follower_dashboard}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD:-rawad_redis_password_2025}
    depends_on:
      - db
      - redis
    networks:
      - backend-network

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: backend_celery_beat
    command: sh -c "
                    mkdir -p /app/logs &&
                    chmod 755 /app/logs &&
                    uv run celery -A core beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
                   "
    volumes:
      - .:/app
    environment:
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - DEBUG=${DEBUG:-True}
      - POSTGRES_NAME=${POSTGRES_NAME:-follower_dashboard}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD:-rawad_redis_password_2025}
    depends_on:
      - db
      - redis
      - celery_worker
    networks:
      - backend-network

volumes:
  postgres_data:
  venv_data: {}

networks:
  backend-network:
    driver: bridge