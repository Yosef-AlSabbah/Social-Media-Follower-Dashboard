version: '3.8'

services:
  db:
    image: postgres:17-alpine
    container_name: follower_dashboard_db_dev
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    networks:
      - app-network

  redis:
    image: redis:8.0-alpine
    container_name: follower_dashboard_redis_dev
    ports:
      - "6380:6379"
    networks:
      - app-network

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile.dev
    container_name: follower_dashboard_backend_dev
    command: uv run python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./Backend:/app
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
    depends_on:
      - db
      - redis
    networks:
      - app-network

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: follower_dashboard_frontend_dev
    command: bun run dev --host
    volumes:
      - ./Frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    networks:
      - app-network

volumes:
  postgres_data_dev:

networks:
  app-network:
    driver: bridge
